@font-face {
    font-family: "myFont";
    src: url(../fonts/SF-Pro-Rounded-Regular.woff2);
}


/* ðŸŒ™ ThÃ¨me sombre par dÃ©faut */
:root {
    --background: rgba(0, 0, 0);
    --label: #fff;
    --label-reverse: #222;

    --green: #43b05c;
    --red: #ff3b2f;
    --orange: #ff9502;

    --first-color: #5b59d6;
    --first-color-t: #5b59d6aa;
    --first-color-light: #8b89ff;
    --secondary-color: rgb(28, 28, 28);

    --secondary-label: rgb(134, 134, 139);
    --tertiary-label: #666;
    --quaternary-label: #444;

    --border-color: rgba(255, 255, 255, 0.1);
    --border: 1px solid var(--border-color);
    --box-shadow: 0 0 25px rgba(255, 255, 255, 0.05);

    --background-alt: rgba(255, 255, 255, .05);
    --background-light: rgba(255, 255, 255, .1);
    --background-reverse: rgba(0, 0, 0, .3);

    --font-size: 15px;
    --border-radius: .5rem;
    --width-nav: max(calc(100% * 0.20), 300px);
    --black: black;
    --white: white;
    --t: 0.2s;
    --width-container: calc(100% - var(--width-nav));
    --height-second-nav: calc(58px + 2rem);
}

/* ðŸŒž ThÃ¨me clair si dÃ©tectÃ© */
@media (prefers-color-scheme: light) {

    /* CORRIGÃ‰ ICI */
    :root {
        --background: #fff;
        --label-reverse: #fff;
        --label: #000;

        /* Les couleurs primaires peuvent rester les mÃªmes ou Ãªtre adaptÃ©es */
        /* --first-color: #some-other-color-for-light-theme; */
        /* --first-color-t: #some-other-color-for-light-theme-aa; */
        /* --first-color-light: #some-other-light-color-for-light-theme; */

        --secondary-color: rgb(240, 240, 240);

        --secondary-label: rgb(60, 60, 60);
        --tertiary-label: #999;
        --quaternary-label: #bbb;

        --border-color: rgba(0, 0, 0, 0.1);
        --border: 1px solid var(--border-color);
        --box-shadow: 0 0 25px 10px rgba(0, 0, 0, 0.05);

        --background-alt: rgba(0, 0, 0, .1);
        --background-light: rgba(0, 0, 0, .15);
        --background-reverse: rgba(255, 255, 255, .3);
    }
}



*,
*:before,
*:after {
    margin: 0;
    padding: 0;
    color: currentColor;
    box-sizing: border-box;
    font-family: -apple-system, "myFont", system-ui, sans-serif;
}

body {
    font-size: var(--font-size);
    background: var(--background);
    color: var(--label);
}

.container {
    display: flex;
    flex-direction: column;
    width: var(--width-container);
    background: var(--background);
    margin-left: var(--width-nav);
}

.navbar {
    position: fixed;
    background-color: var(--background-alt);
    border-right: var(--border);
    width: var(--width-nav);
    display: flex;
    flex-direction: column;
    height: 100%;
    align-items: center;
    overflow-y: auto;
    padding-top: 1rem;
}

.navbar>* {
    width: 100%;
    padding: .5rem 1rem;
}

.add-group {
    cursor: pointer;
}


.navbar .title-app {
    display: flex;
}

.navbar .title-app .title {
    font-size: 2em;
    font-weight: 600;
}

.navbar .search-bar {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--background-alt);
    border: var(--border);
    box-shadow: var(--box-shadow);
    z-index: 1;
    width: 100%;
    border-radius: var(--border-radius);
    gap: 10px;
    position: relative;
    overflow: hidden;
    transition: all var(--t);
}

.navbar .search-bar svg {
    width: 1em;
    position: absolute;
    left: 8px;
}

.search-bar svg path {
    fill: var(--label);
}

.navbar .search-bar:has(input:focus) {
    box-shadow: 0 0 0 2px var(--first-color);
    /* border-color: var(--background-alt); */
}

.navbar .search-bar:has(input:hover) svg path {
    opacity: 1;
}

.navbar .search-bar input {
    width: 100%;
    height: 30px;
    outline: none;
    padding: 0 10px 0 28px;
    border: none;
    background-color: transparent;
    color: var(--label);
    font-size: var(--font-size);
}

.navbar .default_folder {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: .8rem;
    list-style: none;
}

.navbar .default_folder a {
    text-decoration: none;
    color: var(--label);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: .6em;
    width: 100%;
    height: 100%;
}

.navbar .default_folder .folder {
    background-color: var(--background-alt);
    height: 70px;
    border-radius: var(--border-radius);
    box-shadow: 0 0 0 1px var(--border-color);
}

.navbar .default_folder .folder.activate {
    background-color: var(--background-light);
    box-shadow: 0 0 0 3px var(--first-color-t);
}


.navbar .default_folder .up {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.navbar .default_folder .up :is(svg, img) {
    width: 1.4rem;
    height: auto;
    border-radius: 50%;
}

.navbar .default_folder .up .number {
    font-size: 1.2em;
    font-weight: 600;
}

.navbar .default_folder .down {
    display: flex;
}

.navbar .default_folder .down .name {
    font-size: 1.1em;
    text-transform: capitalize;
}

.navbar .end {
    position: fixed;
    display: flex;
    align-items: center;
    justify-content: center;
    width: var(--width-nav);
    bottom: 0;
    padding: 0;
}

.navbar .end button {
    display: flex;
    background-color: var(--background-alt);
    border: none;
    width: 100%;
    align-items: center;
    border-top: var(--border);
    gap: 5px;
    padding: 8px;
    font-size: 1em;
}

.navbar .end button svg {
    width: 1rem;
    height: auto;
}


.navbar .end button:hover {
    background-color: var(--background-light);
    cursor: pointer;
}

.list-container {
    display: flex;
    flex-direction: column;
    gap: 10px;
}


.list-container .list-text {
    color: var(--secondary-label);
    font-size: 1.125em;
    text-transform: uppercase;
}

.navbar .list-container {
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin-top: 20px;
}

.navbar .list-container .list {
    list-style: none;
    display: flex;
    flex-direction: column;
    padding: 0;
    gap: 1px;
}

.navbar .list-container .list li {
    display: flex;
    align-items: center;
    gap: 5px;
    position: relative;
    height: 30px;
    padding: 4px 4px;
    transition: all var(--t);
    border-radius: var(--border-radius);
}


.navbar .list-container .list li:hover {
    cursor: pointer;
    background-color: var(--background-alt);
}

.navbar .list-container .list li.active {
    background-color: var(--background-alt);
    color: #fff;
    z-index: 1;
    border: var(--border);
}

.navbar .list-container .list li .icon {
    position: absolute;
    left: 4px;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 22px;
    height: 22px;
    background-image: linear-gradient(45deg, #000, #444);
    color: #fff;
    border-radius: 50%;
    text-transform: uppercase;
    font-size: 87%;
}

.navbar .list-container .list li a {
    text-decoration: none;
    color: var(--label);
    font-size: 1em;
    flex-grow: 1;
    padding-left: 25px;
    text-transform: capitalize;
}

.container {
    display: flex;
    padding-bottom: 3.5rem;
    flex-direction: column;
}

.container .second-navbar {
    position: fixed;
    top: 0;
    left: calc(var(--width-nav));
    height: var(--height-second-nav);
    width: calc(100% - var(--width-nav));
    display: flex;
    flex-direction: column;
    position: fixed;
    align-items: center;
    justify-content: space-between;
    padding: 0 1rem;
    z-index: 100;
    background-color: var(--background-reverse);
    backdrop-filter: blur(20px) saturate(100%);
}

.container .container-tasks {
    display: flex;
    gap: 10px;
    margin-top: var(--height-second-nav);
}

.container .container-tasks .aside-left {
    display: flex;
    flex-direction: column;
    gap: 10px;
    width: 100%;
}

.container .container-tasks .aside-left>* {
    padding: 1rem;
}

.second-navbar .title-zone {
    display: flex;
    padding-top: 2rem;
    flex-direction: column;
    width: 100%;
}

.second-navbar .title-zone .task-name {
    text-transform: capitalize;
    font-weight: 600;
    color: var(--first-color);
}

.second-navbar .title-zone .sub-title {
    display: flex;
    gap: 4px;
    align-items: center;
}

.second-navbar .sub-title .clear {
    background-color: var(--background-alt);
    padding: 2px 10px;
    border-radius: 20px;
    outline: none;
    color: var(--label);
    cursor: pointer;
    border: var(--border);
    transition: background var(--t);
}

.second-navbar .sub-title .clear:active {
    background-color: var(--background-light);
}

.container-tasks .group-task {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
    overflow-y: auto;
}

.container-tasks .group-task .group {
    display: flex;
    flex-direction: column;
    gap: .5rem;
    position: relative;
}

.container .group .title-group {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.container .group .title-group .more {
    background-color: var(--background-alt);
    padding: 2px 10px;
    height: 24px;
    outline: none;
    cursor: pointer;
    border: var(--border);
    border-radius: 30px;
    transition: var(--t);
}

.container .group .title-group .more:active {
    background-color: var(--background-light);
}

.container .group .title-group h3 {
    text-transform: capitalize;
    font-weight: bold;
}

.container .title-group svg {
    fill: var(--label);
    width: 1em;
    height: auto;
    cursor: pointer;
    border-radius: 10px;
    transition: var(--t);
}

.container .title-group svg:active {
    transform: scale(0.9);
}

.container .task {
    display: flex;
    flex-direction: column;
    background: var(--background-light);
    padding: .5rem;
    border-radius: calc(var(--border-radius) + .5rem);
}

.container .task .default {
    display: flex;
    gap: 5px;
    align-items: center;
}

.container .task span.svg {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    align-self: flex-start;
}

.container .task .default svg {
    min-width: 1.25rem;
    vertical-align: bottom;
    width: 1.25rem;
    height: auto;
    aspect-ratio: 1;
    cursor: pointer;
    fill: var(--first-color);
}

.container .task.completed .default svg {
    fill: var(--first-color-light);
}

.container .task .other-info {
    display: flex;
    flex-direction: column;
    font-size: 90%;
}

.container .task .other-info > * {
    margin-top: .35rem;
}

.container .task .day {
    display: flex;
    flex-direction: column;
    gap: 5px;
    padding-left: 1.45rem;
    color: var(--secondary-label);
    line-height: 1;
}


.container .task .other-info .imgs {
    display: grid;
    gap: .5rem;
    position: relative;
    grid-template-columns: repeat(2, 1fr);
    margin-left: 1.5rem;
}

.container .task .other-info img {
    border-radius: var(--border-radius);
    width: 100%;
    /* aspect-ratio: 1.25; */
    object-fit: cover;
    cursor: pointer;
    transition: var(--t);
}

.container .task .other-info img:hover {
    box-shadow: 0 0 0 3px var(--first-color);
}


.container-tasks.column .group-task {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.container-tasks.column .group-task .group {
    padding: .5rem;
    gap: 0;
    border-radius: calc(.5rem + .8rem);
}

.container-tasks.column .group-task .group .title-group {
    padding: .5rem;
}

.container-tasks.column .group-task .task {
    position: relative;
    gap: 0;
    padding: .5rem;
    padding-bottom: .25rem;
    background-color: transparent;
    background-color: var(--background-alt);
    padding-bottom: 1rem;
}



.container-tasks.column .group-task .task:nth-child(2) {
    border-radius: .8rem .8rem 0 0;
}

.container-tasks.column .group-task .task:last-child {
    border-radius: 0 0 1rem 1rem;
    padding-bottom: 2rem;
}

.container-tasks.column .group-task .task::after {
    content: "";
    position: absolute;
    bottom: .7rem;
    left: 32px;
    width: calc(100% - 32px);
    height: 1px;
    background: var(--border-color);
}

.container-tasks.column .group-task .task:last-child::after {
    content: none;
}

.container-tasks.column .imgs {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    padding: 0;
    gap: .5rem !important;
}

.container-tasks.column .group-task .task img {
    height: 100%;
    cursor: pointer;
    transition: all var(--t);
    border-radius: .5rem;
}


.container-tasks.column .group-task .task img:hover {
    transform: scale(1.025);
}



/* form */
.formTask,
.formGroup {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    transition: all var(--t);
    background-color: var(--background-reverse);
    z-index: 100;
    backdrop-filter: blur(30px);
}

.formTask.mask,
.formGroup.mask {
    overflow: hidden;
    border-radius: 50%;
    transform: scale(0);
}

.formTask fieldset,
.formGroup fieldset {
    border: var(--border);
    border-radius: calc(var(--border-radius) + 1rem);
    padding: 1rem;
    background-color: var(--secondary-color);
    box-shadow: var(--box-shadow), var(--box-shadow), var(--box-shadow);
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: clamp(290px, 30vw, 350px);
}


.formTask .note,
.formGroup .note {
    color: var(--secondary-label);
}

.formTask fieldset h1,
.formGroup fieldset h1 {
    font-size: clamp(1.2em, 2vw + 1em, 1.8em);
    text-transform: uppercase;
    width: fit-content;
}

.items-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.item-form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
}

.item-form-row {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    gap: 10px;
}

.label-form {
    font-size: 1em;
    color: var(--secondary-label);
    text-transform: capitalize;
    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    transition: all var(--t);
}

.item-form:has(input:not(:placeholder-shown)) label,
.item-form:has(input:focus, textarea:focus, input.activate) label {
    top: 0%;
    transform: translateY(-50%);
    font-size: .8em;
    background-color: var(--secondary-color);
    padding: 2px 5px;
    border-radius: 10px;
    border: var(--border);
    color: var(--tertiary-label);
}

.item-form input {
    height: 40px;
    background: var(--background-alt);
    border: var(--border);
    border-radius: var(--border-radius);
    outline: none;
    padding: 0 12px;
    padding-top: 5px;
    font-size: 1em;
}

.item-form button {
    width: 100%;
    height: 30px;
    border-radius: var(--border-radius);
    border: none;
    color: var(--label-reverse);
    background-color: var(--first-color);
    text-transform: capitalize;
    font-size: 1em;
    cursor: pointer;
    transition: transform var(--t);
}

.item.row button:first-child {
    background-color: var(--background-alt);
    color: var(--label);
}

.item.row button:active {
    transform: scale(0.97);
}


.formTask .item.p {
    display: flex;
    flex-direction: column;
    gap: 6px;
}

.formTask svg {
    width: 1.2em;
    height: auto;
    fill: var(--first-color);
    vertical-align: middle;
    cursor: pointer;
}

.formTask .prioritys {
    display: flex;
    justify-content: space-between;
    gap: .3rem;
    background-color: var(--background-alt);
    border-radius: 2rem;
    padding: .3rem;
}

.formTask .prioritys button {
    height: 28px;
    border-radius: 2rem;
    border: var(--border);
    /* border-color: transparent; */
    background-color: var(--background-light);
    padding: 0 15px;
    cursor: pointer;
    transition: var(--t);
    color: var(--label);
    width: 100%;
}

.formTask .prioritys button:active {
    transform: scale(0.95);
}

.formTask .prioritys button.basse.active {
    background-color: var(--background-light);
    border: var(--border);
}
.formTask .prioritys button.moyenne.active {
    background-color: var(--green);
    color: var(--label);
}

.formTask .prioritys button.haute.active {
    background-color: var(--orange);
    color: var(--label);
}
.formTask .prioritys button.important.active {
    color: var(--label);
    background-color: var(--red);
}




@media all and (max-width: 950px) {
    .container-tasks .group-task {
        grid-template-columns: repeat(2, 1fr);
    }
}